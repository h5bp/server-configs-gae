# Google App Engine - Python Application Configurations
# https://developers.google.com/appengine/docs/python/config/appconfig

application: your-app-name
version: 1
runtime: python27
api_version: 1
threadsafe: true


# Avoiding vicious circle of new instances spin-ups caused by response slowdowns during warmups,
# which cause more new instance spin-ups, which cause more response slowdowns during warmups...
# Have at most 1 idle instance at all times, and tolerate 15 second response latencies before
# spinning up a new instance.
# Obviously, once cost becomes a secondary consideration (and Warmup is properly implemented),
# remove / adjust these settings.
# https://cloud.google.com/appengine/docs/python/modules/#config
automatic_scaling:
  max_idle_instances: 1
  min_pending_latency: 15.0s


# Warmup:
# Enabling this causes GET requests to /_ah/warmup to precede live requests
# when an instance is being spinned up.
# Need to reimplement /_ah/warmup handler that warms up app state / caches
inbound_services:
- warmup


builtins:

# Enables Appstats at /_ah/stats/
# Requires Event Recorder WSGI middleware (Implemented. See in gae.py)
# https://cloud.google.com/appengine/docs/python/tools/appstats#Python_Install_the_event_recorder
- appstats: on

# Enables the deferred handler at /_ah/queue/deferred.
# Allows use or deferred.defer() to simplify the creation of Task Queue tasks.
# https://cloud.google.com/appengine/articles/deferred
- deferred: on


# This applies to static content only
default_expiration: "30d"


skip_files:
- ^(.*/)?app\.yaml
- ^(.*/)?app\.yml
- ^(.*/)?index\.yaml
- ^(.*/)?index\.yml
- ^(.*/)?#.*#
- ^(.*/)?.*~
- ^(.*/)?.*\.py[co]
- ^(.*/)?.*/RCS/.*
- ^(.*/)?\..*
- ^(.*/)?tests$
- ^(.*/)?build_tools$


# Lock the versions once you start using the template
# https://cloud.google.com/appengine/docs/python/tools/libraries27
libraries:
- name: webapp2
  version: latest
- name: pycrypto
  version: latest


includes:
- app.static_handlers.yaml
- app.dynamic_handlers.yaml
